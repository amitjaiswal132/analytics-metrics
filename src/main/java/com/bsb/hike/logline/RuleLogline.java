package com.bsb.hike.logline;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class RuleLogline implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	private java.lang.String dateToken;
	private java.lang.String sourceIp;
	private java.lang.String logTypeString;
 	private java.util.Map<String, Object> data;

	public RuleLogline() {
	}

	public java.lang.String getDateToken() {
		return this.dateToken;
	}

	public void setDateToken(java.lang.String dateToken) {
		this.dateToken = dateToken;
	}

	public java.lang.String getSourceIp() {
		return this.sourceIp;
	}

	public void setSourceIp(java.lang.String sourceIp) {
		this.sourceIp = sourceIp;
	}

	public void setLogTypeString(java.lang.String logTypeString) {
		this.logTypeString = logTypeString;
	}

		public String getLogTypeString() {
		return logTypeString;
	}

	public java.util.Map<String, Object> getData() {
		return data;
	}
	
	public void setData(java.util.Map<String, Object> data) {
		this.data=data;
	}


	public RuleLogline(java.lang.String dateToken, java.lang.String sourceIp,
			java.lang.String logTypeString,
			java.util.Map<String, Object> data) {
		this.dateToken = dateToken;
		this.sourceIp = sourceIp;
		this.logTypeString = logTypeString;
		this.data = data;
	}

// 	public RuleLogline(java.lang.String dateToken, java.lang.String sourceIp,
// 			java.lang.String logTypeString) {
// 		this.dateToken = dateToken;
// 		this.sourceIp = sourceIp;
// 		this.logTypeString = logTypeString;
// 		//this.data = data;
// 	}

	
	public Object getMapValue(String keys) {
		String [] keyList = keys.split("\\.");
		java.util.LinkedHashMap<String, Object> valueMap = new java.util.LinkedHashMap<>();
		valueMap=(java.util.LinkedHashMap<String, Object>) data;
		for(int i=0;i<keyList.length;i++) {
			if(i==(keyList.length-1))
				return valueMap.get(keyList[i]);
			
			if(!valueMap.containsKey(keyList[i]))
				return "";
			valueMap = (java.util.LinkedHashMap<String, Object>)valueMap.get(keyList[i]);
		}
		return "";
	}


}